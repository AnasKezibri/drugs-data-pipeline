# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html

# L'objet de type pd.DataFrame qui vq servir comme staging pour stocker le ficher drugs.csv
drugs:
  type: pandas.CSVDataset
  filepath: data/01_raw/drugs.csv

# L'objet de type pd.DataFrame qui va servir comme staging pour stocker le ficher pubmed.csv
pubmed_csv:
  type: pandas.CSVDataset
  filepath: data/01_raw/pubmed.csv

# L'objet de type pd.DataFrame qui va servir comme staging pour stocker le ficher pubmed.json
pubmed_json:
  type: pandas.JSONDataset
  filepath: data/01_raw/pubmed.json

# L'objet de type pd.DataFrame qui va servir comme staging pour stocker le ficher clinical_trials.csv
clinical_trials:
  type: pandas.CSVDataset
  filepath: data/01_raw/clinical_trials.csv

# L'objet de type pd.DataFrame qui va stocker le resultat intermédiaire apres le preprocessing des données pubmed_csv et pubmed_json
preprocessed_drugs:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/preprocessed_drugs.csv

# L'objet de type pd.DataFrame qui va stocker le resultat intermédiaire apres le preprocessing des données drugs
preprocessed_pubmed:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/preprocessed_pubmed.csv

# L'objet de type pd.DataFrame qui va stocker le resultat intermédiaire apres le preprocessing des données clinical_trials
preprocessed_clinical_trials:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/preprocessed_clinical_trials.csv

# Résultats de l'analyse ad-hoc
adhoc_json_1:
  type: pandas.JSONDataset
  filepath: data/03_output/traitement_adhoc_1.json
  save_args:
    orient: records
    indent: 4  # Optional: to pretty-print JSON
